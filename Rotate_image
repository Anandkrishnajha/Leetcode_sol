# You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

# You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

 

# Example 1:


# Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
# Output: [[7,4,1],[8,5,2],[9,6,3]]


//code

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n=matrix.size();

        //transpose
        for(int i=0; i<n; i++){
            for(int j=i; j<matrix[i].size(); j++ ){
            swap(matrix[i][j], matrix[j][i]);
        }
    }


    //reverse 2-d array matrix all values
    //total rows h->0 >(n-1)

    for(int i=0; i<n; i++){
        //har row ko reverse

        reverse(matrix[i].begin(), matrix[i].end());
    }
    }

};
