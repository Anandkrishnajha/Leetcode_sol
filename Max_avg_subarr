//Input: nums = [1,12,-5,-6,50,3], k = 4
// Output: 12.75000
// Explanation: Maximum average is (12 - 5 - 6 + 50) / 4 = 51 / 4 = 12.75

//code
class Solution {
public:
double slidingwindow(vector<int>& nums, int k) {
    int i=0,j=k-1;
    int sum=0;
    for(int y=i; y<=j; ++y)
        sum+= nums[y];
        int maxSum=sum;
        j++;
        while(j<nums.size()){
            sum-=nums[i++];
            sum+=nums[j++];
            maxSum=max(maxSum,sum);
    }
    double maxAvg=maxSum/(double)k;
    return maxAvg;
}
    double findMaxAverage(vector<int>& nums, int k) {
        return slidingwindow(nums,k);
    }
};



//all codes type
class Solution {
public:
double bruteForce(vector<int>& nums, int k){
    int maxSum=INT_MIN;
    int i=0,j=k-1;
    while(j<nums.size()){
        int sum=0;
        for(int y=i; y<=j; ++y)
        sum+= nums[y];
        maxSum=max(maxSum,sum);
        ++j, ++i;
    }
    double maxAvg=maxSum/(double)k;
    return maxAvg;
}
double slidingwindow(vector<int>& nums, int k) {
    int i=0,j=k-1;
    int sum=0;
    for(int y=i; y<=j; ++y)
        sum+= nums[y];
        int maxSum=sum;
        j++;
        while(j<nums.size()){
            sum-=nums[i++];
            sum+=nums[j++];
            maxSum=max(maxSum,sum);
    }
    double maxAvg=maxSum/(double)k;
    return maxAvg;
}
    double findMaxAverage(vector<int>& nums, int k) {
        //return slidingwindow(nums,k);
        return bruteForce(nums,k);
    }
};
