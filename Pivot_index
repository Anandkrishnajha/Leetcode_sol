//Input: nums = [1,7,3,6,5,6]
// Output: 3
// Explanation:
// The pivot index is 3.
// Left sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11
// Right sum = nums[4] + nums[5] = 5 + 6 = 11


//code
class Solution {
public:
    int pivotIndex(vector<int>& nums) {
        int sum = 0;
        int leftSum = 0;

        // Calculate the total sum of the array
        for (int i = 0; i < nums.size(); i++) {
            sum += nums[i];
        }

        // Iterate through the array to find the pivot index
        for (int i = 0; i < nums.size(); i++) {
            sum = sum - nums[i];

            // Check if the current index is a pivot index
            if (leftSum == sum) {
                return i;
            }

            leftSum += nums[i];
        }

        // If no pivot index is found, return -1
        return -1;
    }
};






//method 2
class Solution {
public:
    int bruteforce(vector<int>& nums){
        for(int i=0; i<nums.size(); i++){
            int lsum=0;
            int rsum=0;
            for(int j=0; j<i; ++j)
            lsum +=nums[j];
            for(int j=i+1; j<nums.size(); ++j)
            rsum +=nums[j];
            if(lsum==rsum) return i;
        }
        return -1;
    }
